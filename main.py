from email.mime import message
import psycopg2
import telebot
import datetime
import config
from telebot import types
from openpyxl import Workbook, load_workbook
import time

bot = telebot.TeleBot(config.CONFIG['token'])

db_con = psycopg2.connect("dbname=d88e8nu9n2ngq1 user=pfonljqshtvuzv host=ec2-54-228-97-176.eu-west-1.compute.amazonaws.com password=09d7f92ad0900c867d6233570339398aba1d5677c711ef5ded2214b056d0eef0 port=5432", sslmode="require")
db_cur = db_con.cursor()


class Person:
    ind = '0'
    team = 'default'
    user_info = ()

    def __init__(self, id_person=ind, team_person=team):
        self.ind = id_person
        self.team = str(team_person)
        self.user_info = (self.team, self.ind)

    def write_data(self):
        db_cur.execute("SELECT id_user FROM users")
        x = db_cur.fetchall()
        db_con.commit()

        data = [a[0] for a in x]
        if self.ind in data:
            db_cur.execute(
                "UPDATE users SET team_user = %s WHERE id_user = %s", self.user_info)
            db_con.commit()
        else:
            db_cur.execute(
                "INSERT INTO users(team_user, id_user) VALUES (%s, %s);", self.user_info)
            db_con.commit()

    def get_user_team(self, id_user):
        db_cur.execute(
            f"SELECT team_user FROM users WHERE id_user = {id_user};")
        return db_cur.fetchone()


def reply_get_user_info(message, mode):
    time.sleep(1)
    if mode == 1:
        rek_kb = types.ReplyKeyboardMarkup(
            resize_keyboard=True, one_time_keyboard=True)
        btn_reply = types.KeyboardButton('–í—ã–±—Ä–∞—Ç—å —Å–Ω–æ–≤–∞ –∫–æ–º–∞–Ω–¥—É')
        btn_main = types.KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        rek_kb.add(btn_reply, btn_main)

        bot.send_message(message.chat.id, '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É',
                         reply_markup=rek_kb)
    else:
        main_info(message)


def main_info(message):
    first_kb = types.InlineKeyboardMarkup()
    btn_all = types.InlineKeyboardButton(
        text='–í—Å–µ –∫–æ–º–∞–Ω–¥—ã', callback_data='all')
    btn_single = types.InlineKeyboardButton(
        text='–õ—é–±–∏–º–∞—è –∫–æ–º–∞–Ω–¥–∞', callback_data='single')
    first_kb.add(btn_all, btn_single)

    bot.send_message(message.chat.id, "–ú—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüòé")
    bot.send_message(message.chat.id, "1. –¢—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã –≤—ã–±–∏—Ä–∞—è –µ—ë –∏–∑ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n2. –¢—ã –º–æ–∂–µ—à—å —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–µ–π –ª—é–±–∏–º–æ–π –∫–æ–º–∞–Ω–¥—ã\n–í—ã–±–æ—Ä –∑–∞ —Ç–æ–±–æ–πü§´", reply_markup=first_kb)


def true_time(time):
    time_shd = time.split(':')
    time_shd = [int(time_shd[i]) for i in range(len(time.split(':')))]
    time_shd[0] += 3
    return time_shd


def print_game(team, message, mode):
    wb = load_workbook("TrueShd.xlsx")
    sheet = wb[str(team)]

    date_today = str(datetime.date.today()).split('-')
    time_today = str(datetime.datetime.today())[11:16].split(':')
    for i in range(sheet.max_row):
        date_shd = (str(sheet["D" + str(i + 1)].value)).split(":")
        if date_today[0] == date_shd[0] and date_today[1] == date_shd[1]:
            if date_today[2] == date_shd[2]:
                time_shd = true_time(sheet['C' + str(i + 1)].value)
                if int(time_today[0]) <= time_shd[0] and int(time_today[1]) < time_shd[1]:
                    bot.send_message(
                        message.chat.id, f"–°–ª–µ–¥—É—é—â–∞—è –∏–≥—Ä–∞ –∫–æ–º–∞–Ω–¥—ã {config.TEAM[team]}\n–î–∞—Ç–∞: {sheet['A' + str(i + 1)].value}\n–í—Ä–µ–º—è: {sheet['C' + str(i + 1)].value}\n–ü—Ä–æ—Ç–∏–≤ –∫–æ–º–∞–Ω–¥—ã {sheet['B' + str(i + 1)].value}")
                    reply_get_user_info(message, mode)
                    break
                else:
                    continue
            elif int(date_today[2]) < int(date_shd[2]):
                bot.send_message(
                    message.chat.id, f"–°–ª–µ–¥—É—é—â–∞—è –∏–≥—Ä–∞ –∫–æ–º–∞–Ω–¥—ã {config.TEAM[team]}\n–î–∞—Ç–∞: {sheet['A' + str(i + 1)].value}\n–í—Ä–µ–º—è: {sheet['C' + str(i + 1)].value}\n–ü—Ä–æ—Ç–∏–≤ –∫–æ–º–∞–Ω–¥—ã {sheet['B' + str(i + 1)].value}")
                reply_get_user_info(message, mode)
                break
            else:
                continue
        else:
            continue


def first_choos_user(message):
    global choos_id
    choos_id = 1
    bot.send_message(
        message.chat.id, "–î–∞–≤–∞–π —Å–Ω–∞—á–∞–ª–∞ —Ç—ã –≤—ã–±–µ—Ä–µ—à—å –ª—é–±–∏–º—É—é –∫–æ–º–∞–Ω–¥—É (—Ç—ã –µ—ë —Å–º–æ–∂–µ—à—å –ø–æ–º–µ–Ω—è—Ç—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç)")
    bot.send_message(
        message.chat.id, "–í—ã–±–µ—Ä–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é", reply_markup=m_inl)


@bot.message_handler(commands=['start'])
def start_user_info(message):
    global id_user
    id_user = message.from_user.id
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, –Ø –ë–æ—Ç "Shedule NBA"')
    first_choos_user(message)


@bot.message_handler(content_types=['text'])
def eror_message(message):
    global choos_id, user
    if message.text == '–í—ã–±—Ä–∞—Ç—å —Å–Ω–æ–≤–∞ –∫–æ–º–∞–Ω–¥—É':
        bot.send_message(
            message.chat.id, "–í—ã–±–µ—Ä–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é", reply_markup=m_inl)
    elif message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        main_info(message)
    elif message.text == '–£–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è':
        id_user = message.from_user.id
        u_team = user.get_user_team(id_user)
        print_game(u_team[0].strip(), message, 2)
    elif message.text == '–ü–æ–º–µ–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—É':
        choos_id = 2
        bot.send_message(
            message.chat.id, "–í—ã–±–µ—Ä–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é", reply_markup=m_inl)
    else:
        bot.send_message(message.chat.id, "–ü—Ä–æ—Å—Ç–∏ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–≤–æ—é –∫–æ–º–∞–Ω–¥—Éüòî")
        main_info(message)


@bot.callback_query_handler(func=lambda call: True)
def answer(call):
    global choos_id, user, id_user
    del_mes = call.message.message_id - 1
    if call.data == 'all':
        choos_id = 0
        bot.delete_message(chat_id=call.message.chat.id, message_id=del_mes)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–í—ã–±–µ—Ä–∏ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é', reply_markup=m_inl)

    elif call.data == 'single':
        choos_id = 2
        bot.delete_message(chat_id=call.message.chat.id, message_id=del_mes)
        rek_kb = types.ReplyKeyboardMarkup(
            resize_keyboard=True, one_time_keyboard=True)
        btn_reply = types.KeyboardButton('–£–∑–Ω–∞—Ç—å –≤—Ä–µ–º—è')
        btn_main = types.KeyboardButton('–ü–æ–º–µ–Ω—è—Ç—å –∫–æ–º–∞–Ω–¥—É')
        rek_kb.add(btn_reply, btn_main)
        bot.delete_message(chat_id=call.message.chat.id,
                           message_id=call.message.message_id)
        bot.send_message(chat_id=call.message.chat.id,
                         text='–í—ã–±–µ—Ä–∏ –∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É', reply_markup=rek_kb)

    elif call.data == 'east':
        meast_inl = types.InlineKeyboardMarkup()
        btn_BOS = types.InlineKeyboardButton(
            text='–ë–æ—Å—Ç–æ–Ω –°–µ–ª—Ç–∏–∫—Å', callback_data='BOS')
        btn_NYK = types.InlineKeyboardButton(
            text='–ù—å—é-–ô–æ—Ä–∫ –ù–∏–∫—Å', callback_data='NYK')
        btn_BRK = types.InlineKeyboardButton(
            text='–ë—Ä—É–∫–ª–∏–Ω –ù–µ—Ç—Å', callback_data='BRK')
        btn_PHI = types.InlineKeyboardButton(
            text='–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è 76 –°–∏–∫—Å–µ—Ä—Å', callback_data='PHI')
        btn_TOR = types.InlineKeyboardButton(
            text='–¢–æ—Ä–æ–Ω—Ç–æ –†–∞–ø—Ç–æ—Ä–∑', callback_data='TOR')
        btn_ATL = types.InlineKeyboardButton(
            text='–ê—Ç–ª–∞–Ω—Ç–∞ –•–æ—É–∫—Å', callback_data='ATL')
        btn_CHO = types.InlineKeyboardButton(
            text='–®–∞—Ä–ª–æ—Ç—Ç –•–æ—Ä–Ω–µ—Ç—Å', callback_data='CHO')
        btn_MIA = types.InlineKeyboardButton(
            text='–ú–∞–π–∞–º–∏ –•–∏—Ç', callback_data='MIA')
        btn_ORL = types.InlineKeyboardButton(
            text='–û—Ä–ª–∞–¥–Ω–æ –ú—ç–¥–∂–∏–∫', callback_data='ORL')
        btn_WAS = types.InlineKeyboardButton(
            text='–í–∞—à–∏–Ω–≥—Ç–æ–Ω –£–∏–∑–∞—Ä–¥—Å', callback_data='WAS')
        btn_CHI = types.InlineKeyboardButton(
            text='–ß–∏–∫–∞–≥–æ –ë—É–ª–ª–∑', callback_data='CHI')
        btn_CLE = types.InlineKeyboardButton(
            text='–ö–ª–∏–≤–ª–µ–Ω–¥ –ö–∞–≤–∞–ª—å–µ—Ä—Å', callback_data='CLE')
        btn_DET = types.InlineKeyboardButton(
            text='–î–µ—Ç—Ä–æ–∏—Ç –ü–∏—Å—Ç–æ–Ω—Å', callback_data='DET')
        btn_IND = types.InlineKeyboardButton(
            text='–ò–Ω–¥–∏–∞–Ω–∞ –ü—ç–π—Å–µ—Ä—Å', callback_data='IND')
        btn_MIL = types.InlineKeyboardButton(
            text='–ú–∏–ª—É–æ–∫–∏ –ë–∞–∫—Å', callback_data='MIL')
        meast_inl.add(
            btn_BOS, btn_NYK, btn_BRK, btn_PHI, btn_TOR,
            btn_ATL, btn_CHO, btn_MIA, btn_ORL, btn_WAS,
            btn_CHI, btn_CLE, btn_DET, btn_IND, btn_MIL)

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É', reply_markup=meast_inl)

    elif call.data == 'west':
        mwest_inl = types.InlineKeyboardMarkup()
        btn_POR = types.InlineKeyboardButton(
            text='–ü–æ—Ä—Ç–ª–µ–Ω–¥ –¢—Ä–µ–π–ª –ë–ª–µ–π–∑–µ—Ä—Å', callback_data='POR')
        btn_MIN = types.InlineKeyboardButton(
            text='–ú–∏–Ω–Ω–µ—Å–æ—Ç–∞ –¢–∏–º–±–µ—Ä–≤—É–ª–∑', callback_data='MIN')
        btn_OKC = types.InlineKeyboardButton(
            text='–û–∫–ª–∞—Ö–æ–º–∞-–°–∏—Ç–∏ –¢–∞–Ω–¥–µ—Ä', callback_data='OKC')
        btn_DEN = types.InlineKeyboardButton(
            text='–î–µ–Ω–≤–µ—Ä –ù–∞–≥–≥–µ—Ç—Å', callback_data='DEN')
        btn_UTA = types.InlineKeyboardButton(
            text='–Æ—Ç–∞ –î–∂–∞–∑', callback_data='UTA')
        btn_DAL = types.InlineKeyboardButton(
            text='–î–∞–ª–ª–∞—Å –ú–∞–≤–µ—Ä–∏–∫—Å', callback_data='DAL')
        btn_HOU = types.InlineKeyboardButton(
            text='–•—å—é—Å—Ç–æ–Ω –†–æ–∫–µ—Ç—Å', callback_data='HOU')
        btn_MEM = types.InlineKeyboardButton(
            text='–ú–µ–º—Ñ–∏—Å –ì—Ä–∏–∑–∑–ª–∏—Å', callback_data='MEM')
        btn_NOP = types.InlineKeyboardButton(
            text='–ù—å—é-–û—Ä–ª–µ–∞–Ω –ü–µ–ª–∏–∫–∞–Ω—Å', callback_data='NOP')
        btn_SAS = types.InlineKeyboardButton(
            text='–°–∞–Ω-–ê–Ω—Ç–æ–Ω–∏–æ –°–ø—ë—Ä—Å', callback_data='SAS')
        btn_GSW = types.InlineKeyboardButton(
            text='–ì–æ–ª–¥–µ–Ω –°—Ç—ç–π—Ç –£–æ—Ä—Ä–∏–æ—Ä–∑', callback_data='GSW')
        btn_LAC = types.InlineKeyboardButton(
            text='–õ–ê –ö–ª–∏–ø–ø–µ—Ä—Å', callback_data='LAC')
        btn_LAL = types.InlineKeyboardButton(
            text='–õ–ê –õ–µ–π–∫–µ—Ä—Å', callback_data='LAL')
        btn_PHO = types.InlineKeyboardButton(
            text='–§–∏–Ω–∏–∫—Å –°–∞–Ω–∑', callback_data='PHO')
        btn_SAC = types.InlineKeyboardButton(
            text='–°–∞–∫—Ä–∞–º–µ–Ω—Ç–æ –ö–∏–Ω–≥–∑', callback_data='SAC')
        mwest_inl.add(
            btn_POR, btn_MIN, btn_OKC, btn_DEN, btn_UTA,
            btn_DAL, btn_HOU, btn_MEM, btn_NOP, btn_SAS,
            btn_GSW, btn_LAC, btn_LAL, btn_PHO, btn_SAC)

        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–í—ã–±–µ—Ä–∏ –∫–æ–º–∞–Ω–¥—É', reply_markup=mwest_inl)

    else:
        if choos_id == 1 or choos_id == 2:
            team_user = call.data
            user = Person(id_user, team_user)
            user.write_data()
            if choos_id == 1:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–û—Ç–ª–∏—á–Ω–æ, –¢—ã —Ç–µ–ø–µ—Ä—å –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–≤–æ–µ–π –ª—é–±–∏–º–æ–π –∫–æ–º–∞–Ω–¥—ã", reply_markup=None)
            else:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                      text="–¢—ã –ø–æ–º–µ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É", reply_markup=None)
            time.sleep(1)
            main_info(call.message)
        else:
            bot.delete_message(chat_id=call.message.chat.id,
                               message_id=call.message.message_id)
            print_game(call.data, call.message, 1)


m_inl = types.InlineKeyboardMarkup()
btn_east = types.InlineKeyboardButton(text='–í–æ—Å—Ç–æ—á–Ω–∞—è', callback_data='east')
btn_west = types.InlineKeyboardButton(text='–ó–∞–ø–∞–¥–Ω–∞—è', callback_data='west')
m_inl.add(btn_east, btn_west)

user = Person()
choos_id = 0
id_user = 0

bot.polling(none_stop=True, interval=0)
