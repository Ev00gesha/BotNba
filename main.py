from email.mime import message
import telebot
import datetime
import config
from telebot import types
from openpyxl import Workbook, load_workbook

bot = telebot.TeleBot(config.CONFIG['token'])

def reply_get_user_info(message):
    m_inl = types.InlineKeyboardMarkup()
    btn_east = types.InlineKeyboardButton(
        text='–í–æ—Å—Ç–æ—á–Ω–∞—è', callback_data='east')
    btn_west = types.InlineKeyboardButton(
        text='–ó–∞–ø–∞–¥–Ω–∞—è', callback_data='west')
    m_inl.add(btn_east, btn_west)
    bot.send_message(
        message.chat.id,
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é',
        reply_markup=m_inl
    )


def print_game(team, message):
    wb = load_workbook("TrueShd.xlsx")
    sheet = wb[str(team)]

    spis_today_day = str(datetime.date.today()).split("-")
    time = str(datetime.datetime.today())[11:16]

    for i in range(sheet.max_row):
        spis_shd_day = (str(sheet["D" + str(i + 1)].value)).split(":")
        if spis_today_day[0] == spis_shd_day[0]:
            if spis_today_day[1] == spis_shd_day[1]:
                if int(spis_today_day[2]) == int(spis_shd_day[2]):

                    spis_time_shd = sheet["C" + str(i + 1)].value.split(":")
                    spis_time_day = time.split(":")
                    for i in range(len(spis_time_day)):
                        spis_time_day[i] = int(spis_time_day[i])
                    spis_time_day[0] += 3
                    if int(spis_time_day[0]) <= int(spis_time_shd[0] and int(spis_time_day[1]) < int(spis_time_shd[1])):
                        bot.send_message(
                            message.chat.id,
                            f"–°–ª–µ–¥—É—é—â–∞—è –∏–≥—Ä–∞ –∫–æ–º–∞–Ω–¥—ã {config.TEAM[team]}\n–î–∞—Ç–∞: {sheet['A' + str(i + 1)].value}\n–í—Ä–µ–º—è: {sheet['C' + str(i + 1)].value}\n–ü—Ä–æ—Ç–∏–≤ –∫–æ–º–∞–Ω–¥—ã {sheet['B' + str(i + 1)].value}"
                        )
                        reply_get_user_info(message)
                        break
                    else:
                        continue
                elif int(spis_today_day[2]) < int(spis_shd_day[2]):
                    bot.send_message(
                        message.chat.id,
                        f"–°–ª–µ–¥—É—é—â–∞—è –∏–≥—Ä–∞ –∫–æ–º–∞–Ω–¥—ã {config.TEAM[team]}\n–î–∞—Ç–∞: {sheet['A' + str(i + 1)].value}\n–í—Ä–µ–º—è: {sheet['C' + str(i + 1)].value}\n–ü—Ä–æ—Ç–∏–≤ –∫–æ–º–∞–Ω–¥—ã {sheet['B' + str(i + 1)].value}"
                    )
                    reply_get_user_info(message)
                    break
                else:
                    continue
            else:
                continue
        else:
            continue


@bot.message_handler(commands=['start'])
def get_user_info(message):
    m_inl = types.InlineKeyboardMarkup()
    btn_east = types.InlineKeyboardButton(
        text='–í–æ—Å—Ç–æ—á–Ω–∞—è', callback_data='east')
    btn_west = types.InlineKeyboardButton(
        text='–ó–∞–ø–∞–¥–Ω–∞—è', callback_data='west')
    m_inl.add(btn_east, btn_west)
    bot.send_message(
        message.chat.id,
        '–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ë–æ—Ç NBA,\n–í—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è —Å–ª–µ–¥—É—é—â–µ–π –∏–≥—Ä—ã, –ª—é–±–æ–π –∫–æ–º–∞–Ω–¥—ã NBA'
    )
    bot.send_message(
        message.chat.id,
        '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é',
        reply_markup=m_inl
    )

@bot.message_handler(content_types=['text'])
def eror_message(message):
    bot.send_message(
        message.chat.id,
        "–ü—Ä–æ—Å—Ç–∏ —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —Ç–≤–æ—é –∫–æ–º–∞–Ω–¥—Éüòî"
    )


@bot.callback_query_handler(func=lambda call: True)
def answer(call):
    if call.data == 'east':
        meast_inl = types.InlineKeyboardMarkup()
        btn_BOS = types.InlineKeyboardButton(
            text='–ë–æ—Å—Ç–æ–Ω –°–µ–ª—Ç–∏–∫—Å', callback_data='BOS')
        btn_NYK = types.InlineKeyboardButton(
            text='–ù—å—é-–ô–æ—Ä–∫ –ù–∏–∫—Å', callback_data='NYK')
        btn_BRK = types.InlineKeyboardButton(
            text='–ë—Ä—É–∫–ª–∏–Ω –ù–µ—Ç—Å', callback_data='BRK')
        btn_PHI = types.InlineKeyboardButton(
            text='–§–∏–ª–∞–¥–µ–ª—å—Ñ–∏—è 76 –°–∏–∫—Å–µ—Ä—Å', callback_data='PHI')
        btn_TOR = types.InlineKeyboardButton(
            text='–¢–æ—Ä–æ–Ω—Ç–æ –†–∞–ø—Ç–æ—Ä–∑', callback_data='TOR')
        btn_ATL = types.InlineKeyboardButton(
            text='–ê—Ç–ª–∞–Ω—Ç–∞ –•–æ—É–∫—Å', callback_data='ATL')
        btn_CHO = types.InlineKeyboardButton(
            text='–®–∞—Ä–ª–æ—Ç—Ç –•–æ—Ä–Ω–µ—Ç—Å', callback_data='CHO')
        btn_MIA = types.InlineKeyboardButton(
            text='–ú–∞–π–∞–º–∏ –•–∏—Ç', callback_data='MIA')
        btn_ORL = types.InlineKeyboardButton(
            text='–û—Ä–ª–∞–¥–Ω–æ –ú—ç–¥–∂–∏–∫', callback_data='ORL')
        btn_WAS = types.InlineKeyboardButton(
            text='–í–∞—à–∏–Ω–≥—Ç–æ–Ω –£–∏–∑–∞—Ä–¥—Å', callback_data='WAS')
        btn_CHI = types.InlineKeyboardButton(
            text='–ß–∏–∫–∞–≥–æ –ë—É–ª–ª–∑', callback_data='CHI')
        btn_CLE = types.InlineKeyboardButton(
            text='–ö–ª–∏–≤–ª–µ–Ω–¥ –ö–∞–≤–∞–ª—å–µ—Ä—Å', callback_data='CLE')
        btn_DET = types.InlineKeyboardButton(
            text='–î–µ—Ç—Ä–æ–∏—Ç –ü–∏—Å—Ç–æ–Ω—Å', callback_data='DET')
        btn_IND = types.InlineKeyboardButton(
            text='–ò–Ω–¥–∏–∞–Ω–∞ –ü—ç–π—Å–µ—Ä—Å', callback_data='IND')
        btn_MIL = types.InlineKeyboardButton(
            text='–ú–∏–ª—É–æ–∫–∏ –ë–∞–∫—Å', callback_data='MIL')

        meast_inl.add(
            btn_BOS, btn_NYK, btn_BRK, btn_PHI, btn_TOR,
            btn_ATL, btn_CHO, btn_MIA, btn_ORL, btn_WAS,
            btn_CHI, btn_CLE, btn_DET, btn_IND, btn_MIL)

        bot.send_message(
            call.message.chat.id,
            '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É',
            reply_markup=meast_inl
        )
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –≤—ã–±—Ä–∞–Ω–∞‚úÖ', reply_markup=None)

    elif call.data == 'west':
        mwest_inl = types.InlineKeyboardMarkup()
        btn_POR = types.InlineKeyboardButton(
            text='–ü–æ—Ä—Ç–ª–µ–Ω–¥ –¢—Ä–µ–π–ª –ë–ª–µ–π–∑–µ—Ä—Å', callback_data='POR')
        btn_MIN = types.InlineKeyboardButton(
            text='–ú–∏–Ω–Ω–µ—Å–æ—Ç–∞ –¢–∏–º–±–µ—Ä–≤—É–ª–∑', callback_data='MIN')
        btn_OKC = types.InlineKeyboardButton(
            text='–û–∫–ª–∞—Ö–æ–º–∞-–°–∏—Ç–∏ –¢–∞–Ω–¥–µ—Ä', callback_data='OKC')
        btn_DEN = types.InlineKeyboardButton(
            text='–î–µ–Ω–≤–µ—Ä –ù–∞–≥–≥–µ—Ç—Å', callback_data='DEN')
        btn_UTA = types.InlineKeyboardButton(
            text='–Æ—Ç–∞ –î–∂–∞–∑', callback_data='UTA')
        btn_DAL = types.InlineKeyboardButton(
            text='–î–∞–ª–ª–∞—Å –ú–∞–≤–µ—Ä–∏–∫—Å', callback_data='DAL')
        btn_HOU = types.InlineKeyboardButton(
            text='–•—å—é—Å—Ç–æ–Ω –†–æ–∫–µ—Ç—Å', callback_data='HOU')
        btn_MEM = types.InlineKeyboardButton(
            text='–ú–µ–º—Ñ–∏—Å –ì—Ä–∏–∑–∑–ª–∏—Å', callback_data='MEM')
        btn_NOP = types.InlineKeyboardButton(
            text='–ù—å—é-–û—Ä–ª–µ–∞–Ω –ü–µ–ª–∏–∫–∞–Ω—Å', callback_data='NOP')
        btn_SAS = types.InlineKeyboardButton(
            text='–°–∞–Ω-–ê–Ω—Ç–æ–Ω–∏–æ –°–ø—ë—Ä—Å', callback_data='SAS')
        btn_GSW = types.InlineKeyboardButton(
            text='–ì–æ–ª–¥–µ–Ω –°—Ç—ç–π—Ç –£–æ—Ä—Ä–∏–æ—Ä–∑', callback_data='GSW')
        btn_LAC = types.InlineKeyboardButton(
            text='–õ–ê –ö–ª–∏–ø–ø–µ—Ä—Å', callback_data='LAC')
        btn_LAL = types.InlineKeyboardButton(
            text='–õ–ê –õ–µ–π–∫–µ—Ä—Å', callback_data='LAL')
        btn_PHO = types.InlineKeyboardButton(
            text='–§–∏–Ω–∏–∫—Å –°–∞–Ω–∑', callback_data='PHO')
        btn_SAC = types.InlineKeyboardButton(
            text='–°–∞–∫—Ä–∞–º–µ–Ω—Ç–æ –ö–∏–Ω–≥–∑', callback_data='SAC')

        mwest_inl.add(
            btn_POR, btn_MIN, btn_OKC, btn_DEN, btn_UTA,
            btn_DAL, btn_HOU, btn_MEM, btn_NOP, btn_SAS,
            btn_GSW, btn_LAC, btn_LAL, btn_PHO, btn_SAC)

        bot.send_message(
            call.message.chat.id,
            '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É',
            reply_markup=mwest_inl
        )
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                              text='–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è –≤—ã–±—Ä–∞–Ω–∞‚úÖ', reply_markup=None)

    else:
        bot.edit_message_text(chat_id=call.message.chat.id,
                              message_id=call.message.message_id, text='–ö–æ–º–∞–Ω–¥–∞ –≤—ã–±—Ä–∞–Ω–∞‚úÖ', reply_markup=None)
        print_game(call.data, call.message)


bot.polling(none_stop=True, interval=0)
